mixin extraStyle(filename)
	link(href=filename, rel="stylesheet", type="text/css")
doctype html
html(lang="zh-CN")
	head
		meta(charset="UTF-8")
		title 获取数组的最后一个元素
		+extraStyle('../css/bootstrap.min.css')
		+extraStyle('../css/railscasts.css')
		+extraStyle('../css/style.css')
		link(rel="shortcut icon" href="../ico/favicon.ico")
		script(type="text/javascript").
			var basePath = '../';
			(function(){MX=window.MX||{};var g=function(a,c){for(var b in c)a.setAttribute(b,c[b])};MX.load=function(a){var c=a.js,b=c?".js":".css",d=-1==location.search.indexOf("jsDebug"),e=a.js||a.css;-1==e.indexOf("http://")?(e=(a.path||window.basePath)+((c?"js/":"css/")+e)+(!d&&!c?".source":""),b=e+(a.version?"_"+a.version:"")+b):b=e;d||(d=b.split("#"),b=d[0],b=b+(-1!=b.indexOf("?")?"&":"?")+"r="+Math.random(),d[1]&&(b=b+"#"+d[1]));if(c){var c=b,h=a.success,f=document.createElement("script");f.onload=function(){h&&h();f=null};g(f,{type:"text/javascript",src:c,async:"true"});document.getElementsByTagName("head")[0].appendChild(f)}else{var c=b,i=a.success,a=document.createElement("link");g(a,{rel:"stylesheet"});document.getElementsByTagName("head")[0].appendChild(a);g(a,{href:c});i&&(a.onload=function(){i()})}}})();
	body
		nav.navbar.navbar-inverse.navbar-fixed-top
			.navbar-inner
				.container
					em.logo
					a.navbar-brand(href="http://jansesun.github.io/") Valley of Ghosts
		main.container
			header.title 思考题 获取数组的最后一个元素
			.post-date 16 May 2016
			section
				p
					a(href="https://github.com/jansesun" target="_blank") jansesun
					| 原创，转载请注明
					a(href="http://jansesun.github.io/thinkInJs/getLastElement.html") 出处
				p 之前在UESTC前端群里跟一些朋友分享了一些javascript的思考题，旨在促进群内技术讨论，共同进步。期间不乏思维的火花，一直想将这些宝贵的财富沉淀下来，以便日后翻阅。
				p 这个题目并没有技术难点，主要在于开拓思路，并不局限于函数式编程，所有有些函数会修改原有数组。
				p 方案一 利用数组长度和索引
				pre
					code.
						var getLastElement = function(arr) {
							return arr[arr.length - 1];
						};
				p 方案二 利用数组slice操作
				pre
					code.
						var getLastElement = function(arr) {
							return arr.slice(-1)[0];
						};
				p 方案三 利用数组pop操作
				pre
					code.
						var getLastElement = function(arr) {
							return arr.pop();
						};
				p 方案四 利用数组splice操作
				pre
					code.
						var getLastElement = function(arr) {
							return arr.splice(-1, 1)[0];
						};
				p 方案五 利用数组的reverse和索引
				pre
					code.
						var getLastElement = function(arr) {
							arr.reverse();
							return arr[0];
						};
				p 方案六 利用数组reverse和shift操作
				pre
					code.
						var getLastElement = function(arr) {
							arr.reverse();
							return arr.shift();
						};
				p 除方案一和方案二之外均会修改原数组，reverse会增加O(n)的时间复杂度，shift会增加O(n)的时间复杂度，所以方案五、六仅用于拓展思维，不建议在实际中采用。 
				script(type="text/javascript").
					MX.load({
						js: 'lib/require',
						version: '160106',
						success: function() {
							requirejs(['jquery', 'hljs'], function($, hljs) {
								// 语法高亮
								hljs.configure({
									tabReplace: '    '
								});
								$('pre code').each(function() {
									hljs.highlightBlock(this);
								});
							});
						}
					});